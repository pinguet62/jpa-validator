package fr.pinguet62.jpavalidator.comp.id;

import static java.util.Arrays.asList;

import java.lang.reflect.Field;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Id;

import fr.pinguet62.jpavalidator.checker.JdbcMetadataChecker;
import fr.pinguet62.jpavalidator.comp.ColumnException;
import fr.pinguet62.jpavalidator.comp.Validator;

public class BaseIdValidator extends Validator {

    public BaseIdValidator(String tableName) {
        super(tableName);
    }

    @Override
    protected List<Validator> getAvailableNextValidators() {
        return asList(new AutoGeneratedIdValidator(tableName), new IdentityGeneratedIdValidator(tableName),
                new SequenceGeneratedIdValidator(tableName));
    }

    @Override
    protected void process(Field field) {
        Column column = field.getDeclaredAnnotation(Column.class);
        String columnName = column.name();

        if (!JdbcMetadataChecker.INSTANCE.checkPrimaryKey(tableName, columnName))
            throw new ColumnException(tableName, columnName, "column is not a PK");

        processNext(field);
    }

    @Override
    protected boolean support(Field field) {
        return field.isAnnotationPresent(Id.class);
    }

}