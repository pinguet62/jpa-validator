package fr.pinguet62.jpavalidator.model.id;

import static fr.pinguet62.jpavalidator.util.TestUtils.runCheck;
import static javax.persistence.GenerationType.IDENTITY;
import static javax.persistence.GenerationType.SEQUENCE;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.junit.Test;

import fr.pinguet62.jpavalidator.ValidationException;
import fr.pinguet62.jpavalidator.util.runner.Script;

public class IdGeneratedTest {

    @Entity
    @Table(name = "SAMPLE")
    public static class IdentityNotNullable {
        @Id
        @GeneratedValue(strategy = IDENTITY)
        @Column(name = "ID", nullable = false)
        int id;
    }

    @Entity
    @Table(name = "SAMPLE")
    public static class SequenceNotNullable {
        @Id
        @GeneratedValue(strategy = SEQUENCE, generator = "gen")
        @SequenceGenerator(name = "gen", sequenceName = "SAMPLE_SEQUENCE")
        @Column(name = "ID", nullable = false)
        int id;
    }

    @Test
    @Script("create table SAMPLE ( ID int generated by default as identity primary key );")
    public void test_nullable_identity() {
        try {
            runCheck(IdentityNotNullable.class);
            fail();
        } catch (ValidationException e) {
            assertTrue(e.getErrors().size() >= 1);
        }
    }

    @Test
    @Script({ "create sequence SAMPLE_SEQUENCE;",
            "create table SAMPLE ( ID int generated by default as sequence SAMPLE_SEQUENCE primary key );" })
    public void test_nullable_sequence() {
        try {
            runCheck(SequenceNotNullable.class);
            fail();
        } catch (ValidationException e) {
            assertTrue(e.getErrors().size() >= 1);
        }
    }

}